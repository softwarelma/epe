//1. INPUTS

print_to_console("true");
echo("PROGRAMMA 1");
print_to_console("false");
fddelete("log/epe-step.log");
fwrite("log/epe.log",      "programma 1 - step 1/10 - INPUTS                                OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "PROGRAMMA 1\nprogramma 1 - step 1/10 - INPUTS                                OK\n", "UTF-8", "append");
consoleMode = "true";///////console/manual                   TODO

goto(labelManualMode, not(consoleMode));
version = read_line("Versione delle catene da scaricare (es. 3.0.9): ", "*", "", "true", "true");
usernameSvn = read_line("Username SVN: ", "*", "", "true", "true");
passwordSvn = read_line("Password SVN: ", "*", "", "true", "true", "true");
propFile = read_line("Nome del file di properties senza estenzione (es. A182-Alessandria-test): ", "*", "", "true", "true");
goto(labelInitVars);

labelManualMode = label();
//version = "3.0.9";
version = ${version};
usernameSvn = "guiellis";
passwordSvn = "pwd";////////////               TODO
propFile = "F205-Milano-coll-innovazione";

//2. INIZIALIZZAZIONE VARIABILI

fwrite("log/epe.log",      "programma 1 - step 2/10 - INIZIALIZZAZIONE VARIABILI            OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 2/10 - INIZIALIZZAZIONE VARIABILI            OK\n", "UTF-8", "append");
labelInitVars = label();
urlCatene = echo("http://svn-tributi-bologna.bo.eng.it/svn/tributi/Progetti/ELISA/ACSOR/CATENE_CHRONOS_SGE/tags/", version);
arrayPropFile = split(propFile, "\-");
codiceEnte = list_get_at(arrayPropFile, "0");
comuneLower = lower(list_get_at(arrayPropFile, "1"));
comuneLower = decode(comuneLower, "reggioemilia", "reggio-emilia", comuneLower);
ambiente = list_get_at(arrayPropFile, "2");
ambiente = decode(ambiente, "prod", "prod", "test", "preprod", "coll", "inno");
propFilePath = echo("tmp-sge/", version, "/install/", propFile, ".properties");
variabiliFilePath = echo("tmp-sge/", version, "/install/", propFile, ".sql");

//3. SVN: DOWNLOAD DEL TAG

fwrite("log/epe.log",      "programma 1 - step 3/10 - SVN: DOWNLOAD DEL TAG                 OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 3/10 - SVN: DOWNLOAD DEL TAG                 OK\n", "UTF-8", "append");
fddelete("tmp-sge/");//////////cancellazione cartella di lavoro            TODO
dmkdir("tmp-sge");//////////creazione cartella di lavoro                   TODO
script_svn = import_comment("script_svn");
script_svn = replace(script_svn, echo_to_list("usernameSvn", "urlCatene", "passwordSvn"), 
	echo_to_list(usernameSvn, urlCatene, passwordSvn), "true");
listPassword = echo_to_list(passwordSvn);
print_to_console("true");
exec_shell(script_svn, listPassword);//////////download da SVN             TODO
//echo(script_svn);
print_to_console("false");

//4. COPIANDO LE RISORSE DA ZIPPARE

fwrite("log/epe.log",      "programma 1 - step 4/10 - COPIANDO LE RISORSE DA ZIPPARE        OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 4/10 - COPIANDO LE RISORSE DA ZIPPARE        OK\n", "UTF-8", "append");
fdcopy(echo("tmp-sge/", version, "/CATENE"), "tmp-sge/da-zippare/CATENE/");
fdcopy(variabiliFilePath, "tmp-sge/da-zippare/CATENE/installazione_programmi/variabili.sql");
fdcopy(echo("tmp-sge/", version, "/JOB_TALEND/compilato/jobs"), "tmp-sge/da-zippare/jobs/");
fdcopy(echo("tmp-sge/", version, "/JOB_TALEND/compilato/bin"), "tmp-sge/da-zippare/bin/");
fdcopy(echo("tmp-sge/", version, "/TCM"), "tmp-sge/da-zippare/TCM-completo/");
fdcopy(propFilePath, echo("tmp-sge/da-zippare/Default-", codiceEnte, ".properties"));

//5. BUILD TCM

fwrite("log/epe.log",      "programma 1 - step 5/10 - BUILD TCM                             OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 5/10 - BUILD TCM                             OK\n", "UTF-8", "append");
script_tcm = import_comment("script_tcm");
print_to_console("true");
exec_shell(script_tcm);
print_to_console("false");

//6. CONTROLLI

fwrite("log/epe.log",      "programma 1 - step 6/10 - CONTROLLI                             OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 6/10 - CONTROLLI                             OK\n", "UTF-8", "append");
log = fread("log/epe.log");
success = contains(log, "[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------");
goto(labelEnd, not(success));
error = contains(log, "[INFO] No sources to compile");
goto(labelEnd, error);

//7. COPIANDO LA BUILD DEL TCM

fwrite("log/epe.log",      "programma 1 - step 7/10 - COPIANDO LA BUILD DEL TCM             OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 7/10 - COPIANDO LA BUILD DEL TCM             OK\n", "UTF-8", "append");
tcmPomPath =  "tmp-sge/da-zippare/TCM-completo/pom.xml";
tcmVers = find_between(fread(tcmPomPath), "<it.eng.tributi.tcm.version>", "</it.eng.tributi.tcm.version>");
fdcopy(echo("tmp-sge/da-zippare/TCM-completo/target/tcm-", tcmVers), "tmp-sge/da-zippare/TCM/");
fddelete("tmp-sge/da-zippare/TCM-completo/");

//8. CANCELLA-TRANNE

fwrite("log/epe.log",      "programma 1 - step 8/10 - CANCELLA-TRANNE                       OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 8/10 - CANCELLA-TRANNE                       OK\n", "UTF-8", "append");
script_cancella_tranne = import_comment("script_cancella_tranne");
script_cancella_tranne = replace(script_cancella_tranne, "tcmVers", tcmVers, "true");
script_cancella_tranne = replace(script_cancella_tranne, "comuneLower", comuneLower, "true");
script_cancella_tranne = replace(script_cancella_tranne, "ambiente", ambiente, "true");
print_to_console("true");
exec_shell(script_cancella_tranne);
print_to_console("false");

//9. ZIP COMPLETO

fwrite("log/epe.log",      "programma 1 - step 9/10 - ZIP COMPLETO                          OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 9/10 - ZIP COMPLETO                          OK\n", "UTF-8", "append");
fddelete("tmp-sge/completo.zip");
fdzip("tmp-sge/completo.zip", "tmp-sge/da-zippare");
labelEnd = label();

//10. CANCELLAZIONE DATI DI APPOGGIO

fwrite("log/epe.log",      "programma 1 - step 10/10 - CANCELLAZIONE DATI DI APPOGGIO       OK\n", "UTF-8", "append");
fwrite("log/epe-step.log", "programma 1 - step 10/10 - CANCELLAZIONE DATI DI APPOGGIO       OK\n", "UTF-8", "append");
fddelete("tmp-sge/da-zippare/");

//NON CANCELLARE - SHELL SCRIPTS

/*
script_svn = 
cd tmp-sge
svn co --username ${usernameSvn} ${urlCatene}
${passwordSvn}
exit
*/

/*
script_tcm = 
cd tmp-sge/da-zippare/TCM-completo
mvn clean install
exit
*/

/*
script_cancella_tranne =
cd tmp-sge/da-zippare/TCM
java -jar jar/tcm-${tcmVers}-jar-with-dependencies.jar preserve ${comuneLower}--${ambiente}--chronos
exit
*/
